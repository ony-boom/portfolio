---
import Layout from "./Layout.astro";
import BackButton from "../components/BackButton.astro";
import { getLangFromUrl, useTranslations } from "../i18n/utils";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<Layout>
  <section class="space-y-8 py-12">
    <BackButton backUrl={lang === "fr" ? "/fr" : "/"} />

    <h1>Contact</h1>

    <form class="space-y-6" autocomplete="off">
      <div class="flex flex-col gap-2">
        <label for="name"> {t("contact.form.name.label")} </label>
        <input
          required
          type="text"
          id="name"
          placeholder="John Doe"
          name="name"
          autocomplete="off"
        />
      </div>

      <div class="flex flex-col gap-2">
        <label for="email"> Email </label>
        <input
          required
          type="text"
          id="email"
          placeholder="jdoe@gmail.com"
          name="email"
          autocomplete="off"
        />
      </div>

      <div class="flex flex-col gap-2">
        <label for="subject">
          {t("contact.form.subject.label")}
        </label>
        <input
          required
          type="text"
          id="subject"
          name="title"
          autocomplete="off"
          placeholder={t("contact.form.subject.placeholder")}
        />
      </div>

      <div class="flex flex-col gap-2">
        <label for="message"> Message </label>
        <textarea required id="message" name="message"></textarea>
      </div>

      <button type="submit" class="button primary">
        {t("contact.form.submit")}
      </button>
    </form>
  </section>
</Layout>

<style>
  form.loading {
    @apply pointer-events-none opacity-80;
  }
</style>

<script>
  import * as emailJs from "@emailjs/browser";
  import { formatDate } from "../lib/utils";

  emailJs.init({
    publicKey: import.meta.env.PUBLIC_EMAILJS_PUB_KEY,
  });

  const form = document.querySelector("form");
  const submitButton = form?.querySelector<HTMLButtonElement>(
    "button[type='submit']",
  );

  form?.addEventListener("submit", async (e) => {
    e.preventDefault();
    const formData = new FormData(e.target as HTMLFormElement);
    const data = Object.fromEntries(formData.entries());

    data.time = formatDate(new Date());

    try {
      if (submitButton) {
        submitButton.disabled = true;
        submitButton.textContent = "Sending...";
      }

      form.classList.toggle("loading");

      await emailJs.send(
        import.meta.env.PUBLIC_EMAILJS_SERVICE_ID,
        import.meta.env.PUBLIC_EMAILJS_TEMPLATE_ID,
        data,
      );
    } catch (error) {
      alert("Failed to send message. Please try again later.");
    } finally {
      form.classList.toggle("loading");

      if (submitButton) {
        submitButton.textContent = "Sent!";
        submitButton.disabled = false;

        setTimeout(() => {
          submitButton.textContent = "Send";
          form.reset();
        }, 2000);
      }
    }
  });
</script>
